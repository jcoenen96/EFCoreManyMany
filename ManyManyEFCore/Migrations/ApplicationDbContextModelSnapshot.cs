// <auto-generated />
using System;
using ManyManyEFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManyManyEFCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManyManyEFCore.DataModels.LessonData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("SchoolDataId");

                    b.HasKey("Id");

                    b.HasIndex("SchoolDataId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.SchoolData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new { Id = 1, Name = "Fontys" }
                    );
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.StudentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("SchoolDataId");

                    b.HasKey("Id");

                    b.HasIndex("SchoolDataId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.StudentLessonData", b =>
                {
                    b.Property<int>("LessonId");

                    b.Property<int>("StudentId");

                    b.Property<int?>("LessonDataId");

                    b.HasKey("LessonId", "StudentId");

                    b.HasIndex("LessonDataId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentLessonData");
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.LessonData", b =>
                {
                    b.HasOne("ManyManyEFCore.DataModels.SchoolData")
                        .WithMany("Lessons")
                        .HasForeignKey("SchoolDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.StudentData", b =>
                {
                    b.HasOne("ManyManyEFCore.DataModels.SchoolData")
                        .WithMany("Students")
                        .HasForeignKey("SchoolDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ManyManyEFCore.DataModels.StudentLessonData", b =>
                {
                    b.HasOne("ManyManyEFCore.DataModels.LessonData")
                        .WithMany("StudentLessons")
                        .HasForeignKey("LessonDataId");

                    b.HasOne("ManyManyEFCore.DataModels.LessonData", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("ManyManyEFCore.DataModels.StudentData")
                        .WithMany("StudentLessons")
                        .HasForeignKey("LessonId");

                    b.HasOne("ManyManyEFCore.DataModels.StudentData", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });
#pragma warning restore 612, 618
        }
    }
}
